declare channel +c0(Int)
declare channel +c1(Int)
declare channel +c2(Int)
declare predicate p1 (<> start => <> end) && [] (v >= 0 && v 	)

process main() {
  @init() {
    p(c1, c2) : [node="n1"]
    p(c2, c0) : [node="n2"]
    println("processes started")
    c1.produce(1) : [model=[checkpoint=start]]
  }
  c = @consume(v) : [channel=c0] {
    println("end of pipeline: {v}")
    stop(c) : [model=[checkpoint=end]]
  }
}

process p(in, out) {
  c = @consume(v) : [channel=in] {
    println("{in}: {v}")
    out.produce(v-1) : [model=[variable=v,previous=true]]
    stop(c)
  }
}
