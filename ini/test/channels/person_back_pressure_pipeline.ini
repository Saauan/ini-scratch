
import "ini/lib/collect.ini"
import "ini/lib/io.ini"

declare type Person = [firstName:String, lastName:String, middleName:String, wikipedia:String]
declare channel +wikipedia_in(Person)
declare channel +wikipedia_ready(Boolean)
declare channel +wikipedia_out(Person) : [capacity=100]
declare channel +wikipedia_stop(Boolean)

process enrich() {
	c1 = @consume(p) : [from = wikipedia_in] {
		case p ~ Person[firstName, lastName] {
			println("Wikipedia Enrichment for {p.firstName} {p.lastName}")
			case p.middleName {
				url = url("https://en.wikipedia.org/wiki/{p.firstName}_{p.middleName}_{p.lastName}")
			} else {
				url = url("https://en.wikipedia.org/wiki/{p.firstName}_{p.lastName}")
			}
			case p.firstName == "Unknown" && p.lastName == "Person" {
				url = url("wrong url") // error
			}
			println("Fetching Wikipedia page: "+url)
			sleep(10) //p.wikipedia = fetch(url)
			p.wikipedia = "mock"
			case p ~ Person[wikipedia] {
				println("Sending back enriched person for "+url)
				wikipedia_out.produce(p)
			}
		}
		wikipedia_ready.produce(true)
	}
	c2 = @consume(stop) : [from = wikipedia_stop] && stop {
		stop(c1)
		stop(c2)
	}
	@error(error) {
		case url {
			println("ERROR: " + url)
		}
		wikipedia_ready.produce(true)
	}
}

process send_person_db() {
	@init() {
		persons = [Person[firstName="Jacques", lastName="Chirac"], 
		           Person[firstName="Barack", lastName="Obama"], 
		           Person[firstName="Albert", lastName="Einstein"],
		           Person[firstName="Titi"],
		           Person[firstName="Unknown", lastName="Person"],
		           Person[firstName="Edsger", middleName="W.", lastName="Dijkstra"]]
		i = 0
		wikipedia_ready.produce(true)
	}
	c = @consume(state) : [from=wikipedia_ready] && i < persons.size() {
		case persons[i] ~ Person[firstName, lastName] {
			println("Sending person {persons[i]} for enrichment")
			wikipedia_in.produce(persons[i])
		} else {
			println("Skipping wrong person {persons[i]}")
			wikipedia_ready.produce(true)
		}
		i++
	}
	i == persons.size() {
		sleep(20)
		println("Sent all persons")
		stop(c)
		wikipedia_stop.produce(true)
		return
	}
}

enrich()
wait(send_person_db())