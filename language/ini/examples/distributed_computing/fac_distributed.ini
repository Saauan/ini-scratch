
// This example requires the Kafka broker and n INI nodes to be running

import "ini/lib/collect.ini"

declare channel +facRequest[](Int)
declare channel +facResult[](Int)
declare channel +facAdmin[](String)

function main() {
	println("fac(3)="+fac(3))
}

process fac(n) {
	@init() {
		result = 0
		facRequest[n].produce(n)
		[1..n].foreach(i => {
			p(i++) : [node="n{i}"]
		})
	}
	c = @consume(r) : [channel = facResult[n]] {
		result = r
		[1..n].foreach(i => facAdmin[i].produce("kill"))
		stop(c)
	}
	@end() {
		return result
	}
}

process p(n) {
	@init() {
		println("p({n}) started")
	}
	c1 = @consume(n) : [channel = facRequest[n]] {
		case {
			n == 1 {
				facResult[1].produce(1)
			}
			n > 1 {
				facRequest[n-1].produce(n-1)
			}
		}
	}
	c2 = @consume(f) : [channel = facResult[n-1]] {
		facResult[n].produce(f * n)
	}
	c3 = @consume(msg) : [channel = facAdmin[n]] && msg == "kill" {
		stop(c1)
		stop(c2)
		stop(c3)
	} 
	@end() {
		//println("killed p({n})")
	}
}
