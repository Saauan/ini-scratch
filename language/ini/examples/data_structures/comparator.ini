
import "ini/lib/collect.ini"

/*
 * This example shows a simplement sort function to demonstrate the use 
 * of functional parameters.
 */

process main() {
	@init() {
		l = "a string to sort"
		println("result: " + sort(copy(l), compare))
		// with lambda expression
		println("result: " + sort(copy(l), (e1, e2) => {
			case e1 > e2 {
				return 1
			}
			case e1 < e2 {
				return -1
			}
			case e1 == e2 {
				return 0
			}
		}))
	}
}

/*
 * This sort process takes a 'comparator' function that will be used
 * to compare two elements when sorting.
 */
process sort(l, comparator) {
	i of [0..size(l)-2] | comparator(l[i],l[i+1]) > 0 {
		swap(l[i],l[i+1])
	}
	@end() {
		return l
	}
}

/*
 * A basic comparator to be passed to the sort process.
 */
function compare(e1,e2) {
	case e1 > e2 {
		return 1
	}
	case e1 < e2 {
		return -1
	}
	case e1 == e2 {
		return 0
	}
}
