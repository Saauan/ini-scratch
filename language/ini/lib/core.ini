
declare type Closeable
declare type Writer < Closeable
declare type Reader < Closeable
declare type InputStream < Closeable
declare type OutputStream < Closeable
declare(T < Closeable) close(T) => Void : [target="close(..)"]

declare type Iterable
declare(T) forEach(Iterable, T => Void) => Void : [target="forEach(..)"]
declare toList(Iterable) => Any* : [class="ini.eval.function.Utils", target="toList(..)"]

declare type Dictionary
declare(T) get(Dictionary, String) => T : [target="get(..)"]
declare(T) keySet(Dictionary) => String* : [target="keySet(..)"]

declare now() => Long : [class="java.lang.System", target="currentTimeMillis(..)"]

